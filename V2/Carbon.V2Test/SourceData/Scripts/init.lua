Log:Debug("Setting up key bindings", nil)

capsModifiers = Params({"RightShift", "LeftShift"})
binding = RegisterKeyBinding("console")
binding:Bind("A", "a", nil)
binding:BindOr("A", "A", capsModifiers)
binding:Bind("B", "b", nil)
binding:BindOr("B", "B", capsModifiers)
binding:Bind("C", "c", nil)
binding:BindOr("C", "C", capsModifiers)
binding:Bind("D", "d", nil)
binding:BindOr("D", "D", capsModifiers)
binding:Bind("E", "e", nil)
binding:BindOr("E", "E", capsModifiers)
binding:Bind("F", "f", nil)
binding:BindOr("F", "F", capsModifiers)
binding:Bind("G", "g", nil)
binding:BindOr("G", "G", capsModifiers)
binding:Bind("H", "h", nil)
binding:BindOr("H", "H", capsModifiers)
binding:Bind("I", "i", nil)
binding:BindOr("I", "I", capsModifiers)
binding:Bind("J", "j", nil)
binding:BindOr("J", "J", capsModifiers)
binding:Bind("K", "k", nil)
binding:BindOr("K", "K", capsModifiers)
binding:Bind("L", "l", nil)
binding:BindOr("L", "L", capsModifiers)
binding:Bind("M", "m", nil)
binding:BindOr("M", "M", capsModifiers)
binding:Bind("N", "n", nil)
binding:BindOr("N", "N", capsModifiers)
binding:Bind("O", "o", nil)
binding:BindOr("O", "O", capsModifiers)
binding:Bind("P", "p", nil)
binding:BindOr("P", "P", capsModifiers)
binding:Bind("Q", "q", nil)
binding:BindOr("Q", "Q", capsModifiers)
binding:Bind("R", "r", nil)
binding:BindOr("R", "R", capsModifiers)
binding:Bind("S", "s", nil)
binding:BindOr("S", "S", capsModifiers)
binding:Bind("T", "t", nil)
binding:BindOr("T", "T", capsModifiers)
binding:Bind("U", "u", nil)
binding:BindOr("U", "U", capsModifiers)
binding:Bind("V", "v", nil)
binding:BindOr("V", "V", capsModifiers)
binding:Bind("W", "w", nil)
binding:BindOr("W", "W", capsModifiers)
binding:Bind("X", "x", nil)
binding:BindOr("X", "X", capsModifiers)
binding:Bind("Y", "y", nil)
binding:BindOr("Y", "Y", capsModifiers)
binding:Bind("Z", "z", nil)
binding:BindOr("Z", "Z", capsModifiers)

binding:Bind("D0", "0", nil)
binding:BindOr("D0", ")", capsModifiers)
binding:Bind("D1", "1", nil)
binding:BindOr("D1", "!", capsModifiers)
binding:Bind("D2", "2", nil)
binding:BindOr("D2", "@", capsModifiers)
binding:Bind("D3", "3", nil)
binding:BindOr("D3", "#", capsModifiers)
binding:Bind("D4", "4", nil)
binding:BindOr("D4", "$", capsModifiers)
binding:Bind("D5", "5", nil)
binding:BindOr("D5", "%", capsModifiers)
binding:Bind("D6", "6", nil)
binding:BindOr("D6", "^", capsModifiers)
binding:Bind("D7", "7", nil)
binding:BindOr("D7", "7", capsModifiers)
binding:Bind("D8", "8", nil)
binding:BindOr("D8", "*", capsModifiers)
binding:Bind("D9", "9", nil)
binding:BindOr("D9", "(", capsModifiers)

binding:Bind("LeftBracket", "[", nil)
binding:BindOr("LeftBracket", "{", capsModifiers)
binding:Bind("RightBracket", "]", nil)
binding:BindOr("RightBracket", "}", capsModifiers)
binding:Bind("Comma", ",", nil)
binding:BindOr("Comma", "<", capsModifiers)
binding:Bind("Colon", ";", nil)
binding:BindOr("Colon", ":", capsModifiers)
binding:Bind("Apostrophe", "'", nil)
binding:BindOr("Apostrophe", "\"", capsModifiers)
binding:Bind("Backslash", "\\", nil)
binding:BindOr("Backslash", "|", capsModifiers)
binding:Bind("Tab", "\t", nil)
binding:Bind("Space", " ", nil)
binding:Bind("Slash", "/", nil)
binding:BindOr("Slash", "?", capsModifiers)
binding:Bind("Equals", "=", nil)
binding:BindOr("Equals", "+", capsModifiers)
binding:Bind("Minus", "-", nil)
binding:BindOr("Minus", "_", capsModifiers)
binding:Bind("Period", ".", nil)
binding:BindOr("Period", ">", capsModifiers)

binding:Bind("NumberPad0", "0", nil)
binding:Bind("NumberPad1", "1", nil)
binding:Bind("NumberPad2", "2", nil)
binding:Bind("NumberPad3", "3", nil)
binding:Bind("NumberPad4", "4", nil)
binding:Bind("NumberPad5", "5", nil)
binding:Bind("NumberPad6", "6", nil)
binding:Bind("NumberPad7", "7", nil)
binding:Bind("NumberPad8", "8", nil)
binding:Bind("NumberPad9", "9", nil)

binding:Bind("NumberPadMinus", "-", nil)
binding:Bind("NumberPadSlash", "/", nil)
binding:Bind("NumberPadStar", "*", nil)
binding:Bind("NumberPadPlus", "+", nil)
binding:Bind("NumberPadPeriod", ".", nil)


Log:Debug("Initializing Scene", nil)

node = AddAmbientLight(Vector4(0.2, 0.2, 0.2, 0.2), 0)

node = AddDirectionalLight(Vector4(1, 1, 0.5, 1), Vector3(0.5, -1, 1))
node = AddDirectionalLight(Vector4(1, 1, 1, 0.2), Vector3(-1, -1, -1))

--node = AddPointLight(Vector4(0.5, 1, 1, 1), 20, 10)
--node.Position = Vector4(5, 1, 0, 1)

--node = AddPointLight(Vector4(1, 1, 1, 1), 20, 10)
--node.Position = Vector4(15, 1, 0, 1)

--node = AddPointLight(Vector4(1, 1, 1, 1), 20, 10)
--node.Position = Vector4(10, 1, 5, 1)

--local spotColor = Vector4(1, 0, 1, 1)
--node = AddSpotLight(spotColor, Vector2(5, 10), Vector3(0, 1, 0), 10)
--node.Position = Vector4(15, 5, 20, 1)

--node = AddSpotLight(spotColor, Vector2(5, 10), Vector3(0, 1, 0), 10)
--node.Position = Vector4(25, 2, 20, 1)

--node = AddSpotLight(spotColor, Vector2(5, 10), Vector3(0, 1, 0), 10)
--node.Position = Vector4(35, 0.5, 20, 1)

--[[node = AddModel("Models\\rock_4.dae")
node.Position = Vector4(0, 1, -2, 1)

node = AddModel("Models\\House6.dae")
node.Position = Vector4(5, 1, 0, 1)

node = AddModel("Models\\House.dae")
node.Position = Vector4(-7, 1, -6, 1)

node = AddModel("Models\\monkey.dae")
node.Position = Vector4(-5, 1, 0, 1)
ChangeMaterial(node, 3, true)

node = AddSphere(2, parentNode)
node.Position = Vector4(-5, 2, 5, 1)
ChangeMaterial(node, 3, true)--]]

node = AddModel("Models\\WorldTest.dae")
node.Scale = Vector3(10, 10, 10)
RotateNode(node, Vector3(1, 0, 0), -90)
ChangeMaterial(node, 2, true)

node = AddPlane()
node.Scale = Vector3(1000, 1000, 1000)
RotateNode(node, Vector3(1, 0, 0), 90)
ChangeMaterial(node, 1, true)

node = AddStaticText(2, "Final Fantasy Font\n1 2 3 4 5 - ABCDE", Vector2(1, 1))
node.Position = Vector4(0, 12, 0, 1)

node = AddStaticText(1, "Arial Hi-Rez\n1 2 3 4 5 - ABCDE", Vector2(1, 1))
node.Position = Vector4(0, 16, 0, 1)

parentNode = AddNode()
sphereCount = 0
for x = 1, 5 do
	for y = 1, 10 do
	    sphereCount = sphereCount + 1
		node = AddSphere(2, parentNode)
		node.Position = Vector4(x, y, 10, 1)
		node.Scale = Vector3(0.2, 0.2, 0.2)
		ChangeMaterial(node, 1, true)
		
		node = AddStaticText(1, "Sphere: "..sphereCount, Vector2(0.06, 0.1))
		node.Position = Vector4(x - 0.2, y, 9.5, 1)
	
		end
	end
