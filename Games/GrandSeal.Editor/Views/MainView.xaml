<fluent:RibbonWindow x:Class="GrandSeal.Editor.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:local="clr-namespace:GrandSeal.Editor.Logic.Docking"
        xmlns:views="clr-namespace:GrandSeal.Editor.Views" 
        xmlns:mvvm="clr-namespace:GrandSeal.Editor.Logic.MVVM"
        xmlns:editor="clr-namespace:GrandSeal.Editor"
        xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        Icon="{Binding Source={x:Static editor:StaticResources.IconUri}}">

    <fluent:RibbonWindow.Title>
        <MultiBinding StringFormat="{} GrandSeal.Editor - {0}">
            <Binding Path="ProjectTitle" />
        </MultiBinding>
    </fluent:RibbonWindow.Title>
    
    <fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/presentationframework.Aero;component/themes/aero.normalcolor.xaml" />
                <ResourceDictionary Source="/Resources/Converters.xaml"/>
                <ResourceDictionary Source="/Resources/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </fluent:RibbonWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
    
        <fluent:Ribbon IsMinimized="True" x:Name="Ribbon">
            <fluent:Ribbon.QuickAccessItems>
                <fluent:QuickAccessMenuItem Target="{Binding ElementName=OpenButton}"/>
                <fluent:QuickAccessMenuItem Target="{Binding ElementName=SaveButton}"/>
            </fluent:Ribbon.QuickAccessItems>

            <fluent:Ribbon.Menu>
                <fluent:Backstage Header="File">
                    <fluent:BackstageTabControl>
                        <fluent:BackstageTabItem Header="Recent">
                            <ItemsControl ItemsSource="{Binding Path=RecentProjects}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <MenuItem Header="{Binding}" Click="OnRecentItemClick" Command="{Binding Path=DataContext.CommandOpenProject, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </fluent:BackstageTabItem>
                        <fluent:Button Header="New" ToolTip="Create a new Project" Command="{Binding Path=CommandNewProject}">
                            <fluent:Button.Icon>
                                <Image Source="{Binding Source={x:Static editor:StaticResources.NewIconUri}}"/>
                            </fluent:Button.Icon>
                        </fluent:Button>
                        
                        <fluent:Button Name="OpenButton" Header="Open" ToolTip="Open Project" Command="{Binding Path=CommandOpenProject}" Icon="{StaticResource IconOpen}"/>
                        <fluent:Button Name="SaveButton" Header="Save" ToolTip="Save Project" Command="{Binding Path=CommandSaveProject}" Icon="{StaticResource IconSave}"/>
                        <fluent:SeparatorTabItem/>
                        <fluent:Button Header="Close" ToolTip="Close Project" Command="{Binding Path=CommandCloseProject}" Icon="{StaticResource IconClose}"/>
                        <fluent:SeparatorTabItem/>
                        <fluent:Button Header="Exit" ToolTip="Exit Program" Command="{Binding Path=CommandExit}" Icon="{StaticResource IconExit}"/>
                    </fluent:BackstageTabControl>
                </fluent:Backstage>
            </fluent:Ribbon.Menu>
            
            <fluent:RibbonTabItem Header="Edit">
                                <fluent:RibbonGroupBox>
                    <fluent:RibbonToolBar>
                        <fluent:Button Header="Undo" Size="Large" Command="{Binding Path=CommandUndo}" LargeIcon="{StaticResource IconUndo}" ToolTip="{Binding Path=UndoOperations.Count}"/>
                        <fluent:Button Header="Redo" Size="Large" Command="{Binding Path=CommandRedo}" LargeIcon="{StaticResource IconRedo}" ToolTip="{Binding Path=RedoOperations.Count}"/>
                    </fluent:RibbonToolBar>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            
            <fluent:RibbonTabItem Header="View">
                <fluent:RibbonGroupBox>
                    <fluent:Button Command="{Binding Path=CommandOpenResourceExplorer}" Header="Resource Explorer"/>
                    <fluent:Button Command="{Binding Path=CommandOpenMaterialExplorer}" Header="Material Explorer"/>
                    <fluent:Button Command="{Binding Path=CommandOpenFontExplorer}" Header="Font Explorer"/>
                    <Separator/>
                    <fluent:Button Command="{Binding Path=CommandOpenProperties}" Header="Properties"/>
                    <Separator/>
                    <fluent:Button Command="{Binding Path=CommandOpenSettings}" Header="Settings"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            
            <fluent:RibbonTabItem Header="Build">
                <fluent:RibbonGroupBox>
                    <fluent:Button Command="{Binding Path=CommandBuild}" Header="Build"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <avalonDock:DockingManager AnchorablesSource="{Binding Path=ToolWindows}"
                                   DocumentsSource="{Binding Path=Documents}"
                                   ActiveContent="{Binding Path=ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}"
                                   Grid.Row="1" Theme="{Binding Path=AvalonDockTheme}"
                                   x:Name="DockingManager">
            
            <avalonDock:DockingManager.LayoutItemTemplateSelector>
                <local:PanesTemplateSelector>
                    <local:PanesTemplateSelector.ResourceTemplate>
                        <DataTemplate>
                            <views:ResourceView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.ResourceTemplate>
                    <local:PanesTemplateSelector.FontTemplate>
                        <DataTemplate>
                            <views:FontView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.FontTemplate>

                    <local:PanesTemplateSelector.ScriptTemplate>
                        <DataTemplate>
                            <views:ScriptView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.ScriptTemplate>

                    <local:PanesTemplateSelector.ResourceExplorerTemplate>
                        <DataTemplate>
                            <views:ResourceExplorerView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.ResourceExplorerTemplate>

                    <local:PanesTemplateSelector.MaterialExplorerTemplate>
                        <DataTemplate>
                            <views:ContentExplorerView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.MaterialExplorerTemplate>

                    <local:PanesTemplateSelector.FontExplorerTemplate>
                        <DataTemplate>
                            <views:ContentExplorerView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.FontExplorerTemplate>

                    <local:PanesTemplateSelector.PropertiesTemplate>
                        <DataTemplate>
                            <views:PropertyView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.PropertiesTemplate>
                    
                    <local:PanesTemplateSelector.EditorSettingsTemplate>
                        <DataTemplate>
                            <views:EditorSettingsView/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.EditorSettingsTemplate>
                </local:PanesTemplateSelector>
            </avalonDock:DockingManager.LayoutItemTemplateSelector>

            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                <local:PanesStyleSelector>
                    <local:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconUri}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                        </Style>
                    </local:PanesStyleSelector.ToolStyle>
                    <local:PanesStyleSelector.DocumentStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="mvvm:DynamicBasedOn.DynamicBasedOn" Value="{DynamicResource {x:Type xcad:LayoutItem}}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="ToolTip" Value="{Binding Model.Type}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CommandClose}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconUri}"/>
                        </Style>
                    </local:PanesStyleSelector.DocumentStyle>
                </local:PanesStyleSelector>
            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>
            <avalonDock:DockingManager.LayoutUpdateStrategy>
                <local:LayoutInitializer/>
            </avalonDock:DockingManager.LayoutUpdateStrategy>

            <xcad:LayoutRoot>
                <xcad:LayoutPanel Orientation="Horizontal">
                    <xcad:LayoutDocumentPane/>
                    <xcad:LayoutAnchorablePane Name="ToolsPane" DockWidth="200">
                    </xcad:LayoutAnchorablePane>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </avalonDock:DockingManager>

        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <ProgressBar Minimum="{Binding Path=OperationProgress.Minimum}"
                             Maximum="{Binding Path=OperationProgress.Maximum}"
                             Value="{Binding Path=OperationProgress.Value}" Height="10" Width="200" 
                             Visibility="{Binding Path=OperationProgress.InProgress, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StatusBarItem>
            
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding Path=DateTime}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</fluent:RibbonWindow>
